/*
 * BASE STYLES
 * ================================ */

//box-sizing model = margin and paddgin inside element so they don't increase width of component.
*,
*:before,
*:after {
    box-sizing: border-box;
}

html,
body {
    width: 100%;
    height: 100%;
    margin: 0px;
    padding: 0px;
    overflow-x: hidden;
}

.hidden{
display: none;
}

#HiddenEd {
    display: none;
    text-align: center;
}

#HiddenHR {
    display: none;
}

#WarHiddenCauses {
    display: none;
}

ul li {
    list-style-type: none;
    margin: 5px;
}


/*------------------------------------*\
  #BODY
\*------------------------------------*/

body {
    min-height: 100%;
    height: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    @extend .text;
}

.bg {
    margin-left: 70px;
    padding-left: 5vw;
    padding-right: 5vw;
    @include breakpoint ($min: sm) {
        margin-left: 0px;
    }
    @include breakpoint ($min: xs) {
        margin-left: 0px;
    }
}

.bg__red {
    background: $red;
}

.bg__yellow {
    @extend .bg;
    background: $yellow;
}

.bg__warRoom {
    @extend .bg;
    background: rgb(19, 16, 29);
    background-image: url("bg_room.svg");
    background-size: cover;
    background-repeat: repeat-x;
    background-position: center;
    @include breakpoint ($min: sm) {
        margin-top: 10vh;
    }
    @include breakpoint ($min: xs) {
        margin-left: 0px;
    }
}

.bg__boxes {
    @include breakpoint ($min: lg) {
        padding: 6vh;
    }
    
     @include breakpoint ($min: xl) {
        padding: 8vh;
    }
    
    @extend .bg;
    background: rgb(19,16,29);
    background-image: url("box.svg");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}

.bg__purple {
    @extend .bg;
    background: rgb(19, 16, 29);
}

.bg__blue {
    @extend .bg;
    background: $blue;
}

.bg__grey {
    @extend .bg;
    background: $grey;
}


.bg__light {
    @extend .bg;
    background: $light;
}

.bg__red {
    @extend .bg;
    background: $red;
}

.text--margin__small{
margin-left: 30px;
     @include breakpoint ($min: sm) {
   margin-left: 0px; 
}
}
/*------------------------------------*\
  #COLOR_SECTIONS
\*------------------------------------*/

//section that is substituting main functions of resizing
.section-resized {
    padding-top: 10px;
    padding-bottom: 10px;
    @include breakpoint ($min: xs) {
        width: 300px;
        max-width: 100%;
    }
    @include breakpoint ($min: sm) {
        width: 550px;
        max-width: 100%;
    }
    @include breakpoint ($min: md) {
        width: 640px;
        max-width: 100%;
    }
    @include breakpoint ($min: lg) {
        width: 1100px;
        max-width: 100%;
    }
    @include breakpoint ($min: xl) {
        width: 1240px;
        max-width: 100%;
    }
}


/*------------------------------------*\
#FONTS
\*------------------------------------*/

//responsive font sizes
.title {
    font-family: BoldFont;
    color: $black;
    padding: 2vh 0 2vh;
    margin-top: 15px;
    margin-bottom: 15px;
    @include breakpoint($min: xs) {
        font-size: map-deep-get($typescale, 'heading1', 'xs');
        margin-top: 12vh;
    }
    @include breakpoint($min:sm) {
        font-size: map-deep-get($typescale, 'heading1', 'sm');
        margin-top: 9vh;
    }
    @include breakpoint($min:md) {
        font-size: map-deep-get($typescale, 'heading1', 'md');
    }
    @include breakpoint($min:lg) {
        font-size: map-deep-get($typescale, 'heading1', 'lg');
    }
    @include breakpoint($min:xl) {
        font-size: map-deep-get($typescale, 'heading1', 'lg');
    }
}

.subtitle {
    font-family: BoldFont;
    color: $black;
    @include breakpoint($min: xs) {
        font-size: map-deep-get($typescale, 'sub1', 'xs');
    }
    @include breakpoint($min:sm) {
        font-size: map-deep-get($typescale, 'sub1', 'sm');
    }
    @include breakpoint($min:md) {
        font-size: map-deep-get($typescale, 'sub1', 'md');
    }
    @include breakpoint($min:lg) {
        font-size: map-deep-get($typescale, 'sub1', 'lg');
    }
}

.text {
    font-family: TextFont;
    //color: $main-color50;
    @include breakpoint($min: xs) {
        font-size: map-deep-get($typescale, 'text1', 'xs');
    }
    @include breakpoint($min:sm) {
        font-size: map-deep-get($typescale, 'text1', 'sm');
    }
    @include breakpoint($min:md) {
        font-size: map-deep-get($typescale, 'text1', 'md');
    }
    @include breakpoint($min:lg) {
        font-size: map-deep-get($typescale, 'text1', 'lg');
    }
}

.smalltext {
    @include breakpoint($min: xs) {
        font-size: map-deep-get($typescale, 'smalltext1', 'xs');
    }
    @include breakpoint($min:sm) {
        font-size: map-deep-get($typescale, 'smalltext1', 'sm');
    }
    @include breakpoint($min:md) {
        font-size: map-deep-get($typescale, 'smalltext1', 'md');
    }
    @include breakpoint($min:lg) {
        font-size: map-deep-get($typescale, 'smalltext1', 'lg');
    }
}

 
/*------------------------------------*\
  #LINKS
\*------------------------------------*/

a {
    color: $black;
    text-decoration: none;
    transition: all 0.2s ease-in-out;
    cursor: pointer;
    &:hover {
        text-decoration: none;
        color: $white;
    }
}


.margin__top__neg {
    margin-top: -8vh;
}


/*------------------------------------*\
  #TABLES
\*------------------------------------*/

table {
    border-collapse: collapse;
    width: 100%;
}

td,
th {
    border: 1px solid #dddddd;
    padding: 8px;
}

tr:nth-child(even) {
    background-color: #dddddd;
}